{
  "version": "3.4",
  "log": [
    {
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)73_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)13_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:56",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)73_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol:ERC1967Utils"
        ],
        "methods": [
          "proxiableUUID()",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:97"
          }
        ],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)73_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)73_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967": {
        "src": "@openzeppelin\\contracts\\interfaces\\IERC1967.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC1822.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol:ERC1967Utils": {
        "src": "@openzeppelin\\contracts\\proxy\\ERC1967\\ERC1967Utils.sol:15",
        "version": {
          "withMetadata": "988c51be94040b5bb78e6739ecf31c3539c880afc84253fa97a12de186ef7572",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot",
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:97"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:97"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:IBeacon": {
        "src": "@openzeppelin\\contracts\\proxy\\beacon\\IBeacon.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:11",
        "version": {
          "withMetadata": "041c0d4f90bb8e17d3ab85a9968cb4f2c9ad776fac701e799df8a26338a603d7",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Errors.sol:Errors"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:97"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/utils/Errors.sol:Errors": {
        "src": "@openzeppelin\\contracts\\utils\\Errors.sol:14",
        "version": {
          "withMetadata": "5f46a4584c437cd91e6e4386b93037e61fa724904275bd84b5f58da24743a61f",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot": {
        "src": "@openzeppelin\\contracts\\utils\\StorageSlot.sol:34",
        "version": {
          "withMetadata": "e34a460afe63f8e676880ba0751522137768df1fdd3fff06c598d9006111366b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/DuelGame.sol:DuelGame": {
        "src": "contracts\\DuelGame.sol:4",
        "version": {
          "withMetadata": "95342404d7e6d88e7a04ace68a1964c23c3951310d0a13d77afe4d229f133fbc",
          "withoutMetadata": "be43a84af9aca9bb118b63518a61c1c0bfa337fbddccad51047940dfb9b58a07",
          "linkedWithoutMetadata": "be43a84af9aca9bb118b63518a61c1c0bfa337fbddccad51047940dfb9b58a07"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "isValidBet(uint256)",
          "joinDuel()",
          "getWaitingPlayersCount(uint256)",
          "getDuel(uint256)",
          "getAllowedBets()",
          "getPlayerStats(address)",
          "cancelWaiting()",
          "emergencyWithdraw()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DuelGame",
            "src": "contracts\\DuelGame.sol:55"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextDuelId",
            "src": "contracts\\DuelGame.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextWaitingId",
            "src": "contracts\\DuelGame.sol:35"
          },
          {
            "kind": "state-variable-assignment",
            "name": "allowedBets",
            "src": "contracts\\DuelGame.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "DuelGame",
              "src": "contracts\\DuelGame.sol:5"
            },
            {
              "label": "totalDuels",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "DuelGame",
              "src": "contracts\\DuelGame.sol:6"
            },
            {
              "label": "randomNonce",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "DuelGame",
              "src": "contracts\\DuelGame.sol:7"
            },
            {
              "label": "duels",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(Duel)1459_storage)",
              "contract": "DuelGame",
              "src": "contracts\\DuelGame.sol:30"
            },
            {
              "label": "waitingPlayers",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_struct(WaitingPlayer)1468_storage)",
              "contract": "DuelGame",
              "src": "contracts\\DuelGame.sol:31"
            },
            {
              "label": "waitingByBet",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
              "contract": "DuelGame",
              "src": "contracts\\DuelGame.sol:32"
            },
            {
              "label": "nextDuelId",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "DuelGame",
              "src": "contracts\\DuelGame.sol:34"
            },
            {
              "label": "nextWaitingId",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "DuelGame",
              "src": "contracts\\DuelGame.sol:35"
            },
            {
              "label": "allowedBets",
              "offset": 0,
              "slot": "8",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "DuelGame",
              "src": "contracts\\DuelGame.sol:38"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(uint256 => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Duel)1459_storage)": {
              "label": "mapping(uint256 => struct DuelGame.Duel)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(WaitingPlayer)1468_storage)": {
              "label": "mapping(uint256 => struct DuelGame.WaitingPlayer)",
              "numberOfBytes": "32"
            },
            "t_struct(Duel)1459_storage": {
              "label": "struct DuelGame.Duel",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "player1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "player2",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "betAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "timestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "winner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "completed",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "5"
                },
                {
                  "label": "randomSeed",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_struct(WaitingPlayer)1468_storage": {
              "label": "struct DuelGame.WaitingPlayer",
              "members": [
                {
                  "label": "player",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "betAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "joinTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "active",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/GameHubV2.sol:GameHubV2": {
        "src": "contracts\\GameHubV2.sol:8",
        "version": {
          "withMetadata": "142c8185e03c3b4c2f9564a4935ed02e4c9a0cd156487885b9870da7c4f42485",
          "withoutMetadata": "067b32d4e32b56258a79ad0a5226899f139e997266d789594e29fd084efa322d",
          "linkedWithoutMetadata": "067b32d4e32b56258a79ad0a5226899f139e997266d789594e29fd084efa322d"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "()",
          "initialize()",
          "isValidBet(uint256)",
          "getRequiredPlayers(uint8)",
          "getMultiplier(uint8)",
          "joinGame(uint8)",
          "getWaitingPlayersCount(uint8,uint256)",
          "getDuel(uint256)",
          "getBattleRoyale(uint256)",
          "getAllowedBets()",
          "getPlayerStats(address)",
          "cancelWaiting()",
          "emergencyWithdraw()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "totalDuels",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "GameHubV2",
              "src": "contracts\\GameHubV2.sol:43"
            },
            {
              "label": "totalBattleRoyales",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "GameHubV2",
              "src": "contracts\\GameHubV2.sol:44"
            },
            {
              "label": "randomNonce",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "GameHubV2",
              "src": "contracts\\GameHubV2.sol:45"
            },
            {
              "label": "duels",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(Duel)2208_storage)",
              "contract": "GameHubV2",
              "src": "contracts\\GameHubV2.sol:49"
            },
            {
              "label": "battleRoyales",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_struct(BattleRoyale)2229_storage)",
              "contract": "GameHubV2",
              "src": "contracts\\GameHubV2.sol:50"
            },
            {
              "label": "waitingPlayers",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint256,t_struct(WaitingPlayer)2241_storage)",
              "contract": "GameHubV2",
              "src": "contracts\\GameHubV2.sol:51"
            },
            {
              "label": "waitingByModeAndBet",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_enum(GameMode)2191,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))",
              "contract": "GameHubV2",
              "src": "contracts\\GameHubV2.sol:54"
            },
            {
              "label": "nextDuelId",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "GameHubV2",
              "src": "contracts\\GameHubV2.sol:57"
            },
            {
              "label": "nextBattleRoyaleId",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "GameHubV2",
              "src": "contracts\\GameHubV2.sol:58"
            },
            {
              "label": "nextWaitingId",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "GameHubV2",
              "src": "contracts\\GameHubV2.sol:59"
            },
            {
              "label": "allowedBets",
              "offset": 0,
              "slot": "10",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "GameHubV2",
              "src": "contracts\\GameHubV2.sol:62"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)73_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)13_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_enum(GameMode)2191": {
              "label": "enum GameHubV2.GameMode",
              "members": [
                "DUEL",
                "BR5",
                "BR100",
                "BR1000"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_enum(GameMode)2191,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))": {
              "label": "mapping(enum GameHubV2.GameMode => mapping(uint256 => uint256[]))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(uint256 => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(BattleRoyale)2229_storage)": {
              "label": "mapping(uint256 => struct GameHubV2.BattleRoyale)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Duel)2208_storage)": {
              "label": "mapping(uint256 => struct GameHubV2.Duel)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(WaitingPlayer)2241_storage)": {
              "label": "mapping(uint256 => struct GameHubV2.WaitingPlayer)",
              "numberOfBytes": "32"
            },
            "t_struct(BattleRoyale)2229_storage": {
              "label": "struct GameHubV2.BattleRoyale",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "mode",
                  "type": "t_enum(GameMode)2191",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "players",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "betAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "startTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "winner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "completed",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "5"
                },
                {
                  "label": "randomSeed",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "requiredPlayers",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_struct(Duel)2208_storage": {
              "label": "struct GameHubV2.Duel",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "player1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "player2",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "betAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "timestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "winner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "completed",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "5"
                },
                {
                  "label": "randomSeed",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_struct(WaitingPlayer)2241_storage": {
              "label": "struct GameHubV2.WaitingPlayer",
              "members": [
                {
                  "label": "player",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "betAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "mode",
                  "type": "t_enum(GameMode)2191",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "joinTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "active",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.22"
      }
    },
    {
      "contracts/DuelGame.sol:DuelGame": {
        "src": "contracts\\DuelGame.sol:4",
        "version": {
          "withMetadata": "16c282768c658f20ce606cead9fbc9f61bdf3fc6aa9649761f46a3324e633cf6",
          "withoutMetadata": "8cb5e7d4c04f80a7ad1f1e8628be65d230991c39586a690d2bce2f892fd7628a",
          "linkedWithoutMetadata": "8cb5e7d4c04f80a7ad1f1e8628be65d230991c39586a690d2bce2f892fd7628a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "isValidBet(uint256)",
          "joinDuel()",
          "getWaitingPlayersCount(uint256)",
          "getDuel(uint256)",
          "getAllowedBets()",
          "getPlayerStats(address)",
          "cancelWaiting()",
          "emergencyWithdraw()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DuelGame",
            "src": "contracts\\DuelGame.sol:55"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextDuelId",
            "src": "contracts\\DuelGame.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nextWaitingId",
            "src": "contracts\\DuelGame.sol:35"
          },
          {
            "kind": "state-variable-assignment",
            "name": "allowedBets",
            "src": "contracts\\DuelGame.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "DuelGame",
              "src": "contracts\\DuelGame.sol:5"
            },
            {
              "label": "totalDuels",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "DuelGame",
              "src": "contracts\\DuelGame.sol:6"
            },
            {
              "label": "randomNonce",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "DuelGame",
              "src": "contracts\\DuelGame.sol:7"
            },
            {
              "label": "duels",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(Duel)27_storage)",
              "contract": "DuelGame",
              "src": "contracts\\DuelGame.sol:30"
            },
            {
              "label": "waitingPlayers",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_struct(WaitingPlayer)36_storage)",
              "contract": "DuelGame",
              "src": "contracts\\DuelGame.sol:31"
            },
            {
              "label": "waitingByBet",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
              "contract": "DuelGame",
              "src": "contracts\\DuelGame.sol:32"
            },
            {
              "label": "nextDuelId",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "DuelGame",
              "src": "contracts\\DuelGame.sol:34"
            },
            {
              "label": "nextWaitingId",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "DuelGame",
              "src": "contracts\\DuelGame.sol:35"
            },
            {
              "label": "allowedBets",
              "offset": 0,
              "slot": "8",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "DuelGame",
              "src": "contracts\\DuelGame.sol:38"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(uint256 => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Duel)27_storage)": {
              "label": "mapping(uint256 => struct DuelGame.Duel)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(WaitingPlayer)36_storage)": {
              "label": "mapping(uint256 => struct DuelGame.WaitingPlayer)",
              "numberOfBytes": "32"
            },
            "t_struct(Duel)27_storage": {
              "label": "struct DuelGame.Duel",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "player1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "player2",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "betAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "timestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "winner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "completed",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "5"
                },
                {
                  "label": "randomSeed",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_struct(WaitingPlayer)36_storage": {
              "label": "struct DuelGame.WaitingPlayer",
              "members": [
                {
                  "label": "player",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "betAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "joinTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "active",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      }
    }
  ]
}